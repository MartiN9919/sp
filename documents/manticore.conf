source base {
	type = mysql
	sql_host = 127.0.0.1
	sql_port = 3306
	sql_user = dev
	sql_pass = ***
	sql_db = vec_data
}

source rec : base {
	sql_attr_uint = rec_id
	sql_field_string = val
	sql_field_string = key_id
	sql_attr_bigint = sec
}
############################################################################################################################################################################
source vec_data_obj_free_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_free_row;
}

source vec_data_obj_file_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_file_row;
}

source vec_data_obj_doc_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_doc_row;
}

source vec_data_obj_point_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_point_row;
}

source vec_data_obj_geometry_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_geometry_row;
}

source vec_data_obj_person_p_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_person_p_row;
}

source vec_data_obj_person_l_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_person_l_row;
}

source vec_data_obj_case_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_case_row;
}

source vec_data_obj_transport_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_transport_row;
}

source vec_data_obj_telefon_row : rec {
	
	sql_query = SELECT row_number() over() as id, rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, val FROM obj_telefon_row;
}

source vec_data_rel : base {
	sql_attr_bigint = sec
	sql_field_string = key_id
	sql_field_string = obj_id_1
	sql_field_string = rec_id_1
	sql_field_string = obj_id_2
	sql_field_string = rec_id_2
	sql_field_string = val
	
	sql_query = SELECT rec_id, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, key_id, obj_id_1, rec_id_1, obj_id_2, rec_id_2, val FROM rel;
}

source vec_data_obj_geometry_col : base {
	sql_attr_uint = rec_id
	sql_attr_uint = parent_id
	sql_field_string = name
	sql_field_string = icon
	sql_attr_json = location
	sql_attr_bigint = sec
	sql_query = SELECT row_number() over() as id, rec_id, parent_id, name, icon, ST_AsGeoJSON(location) AS location, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec  FROM obj_geometry_col;
}

source vec_data_obj_point_col : base {
	sql_attr_uint = rec_id
	sql_attr_json = point
	sql_attr_bigint = sec
	sql_field_string = temp
	sql_query = SELECT row_number() over() as id, rec_id, ST_AsGeoJSON(point) as point, TO_DAYS(DATE_FORMAT(dat, '%Y-%m-%d'))*86400 + TIME_TO_SEC(DATE_FORMAT(dat,'%H:%i:%s')) sec, 'temp' as temp FROM obj_point_col;
}

############################################################################################################################################################################

index obj_free_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_free_row
	path = /path/manticore/data/obj_free_row_pl/index
}

index obj_free_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_free_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index obj_file_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_file_row
	path = /path/manticore/data/obj_file_row_pl/index
}

index obj_file_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_file_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index obj_doc_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_doc_row
	path = /path/manticore/data/obj_doc_row_pl/index
}

index obj_doc_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_doc_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index obj_point_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_point_row
	path = /path/manticore/data/obj_point_row_pl/index
}

index obj_point_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_point_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index obj_geometry_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_geometry_row
	path = /path/manticore/data/obj_geometry_row_pl/index
}

index obj_geometry_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_geometry_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index obj_person_p_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_person_p_row
	path = /path/manticore/data/obj_person_p_row_pl/index
}

index obj_person_p_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_person_p_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index obj_person_l_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_person_l_row
	path = /path/manticore/data/obj_person_l_row_pl/index
}

index obj_person_l_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_person_l_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index obj_case_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_case_row
	path = /path/manticore/data/obj_case_row_pl/index
}

index obj_case_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_case_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index obj_transport_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_transport_row
	path = /path/manticore/data/obj_transport_row_pl/index
}

index obj_transport_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_transport_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index obj_telefon_row_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_telefon_row
	path = /path/manticore/data/obj_telefon_row_pl/index
}

index obj_telefon_row {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_telefon_row/index
	rt_field = rec_id, key_id, val, sec
}
############################################################################################################################################################################
index rel_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_rel
	path = /path/manticore/data/rel_pl/index
}

index rel {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/rel/index
	rt_field = id, key_id, sec, obj_id_1, rec_id_1, obj_id_2, rec_id_2, val, date, sec
}

index obj_geometry_col_pl {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = plain
	source = vec_data_obj_geometry_col
	path = /path/manticore/data/obj_geometry_col_pl/index
}

index obj_geometry_col {
	index_exact_words = 1
	min_infix_len = 3
	morphology = lemmatize_ru_all, stem_enru
	type = rt
	path = /path/manticore/data/obj_geometry_col/index
	rt_field = id, rec_id, parent_id, name, icon, location
}

index obj_point_col_pl {
	type = plain
	source = vec_data_obj_point_col
	path = /path/manticore/data/obj_point_col_pl/index
}

index obj_point_col {
	type = rt
	path = /path/manticore/data/obj_point_col/index
	rt_field = rec_id, lat, lon
}
############################################################################################################################################################################
searchd
{
 listen = 9312 # порт для работы через API
 listen = 9306:mysql41 # порт для комуникаций с MySQL
 log = /path/manticore/logs/searchd.log # логи демона
 query_log = /path/manticore/logs/query.log # логи поисковых запросов
 network_timeout = 5 # таймаут чтения в секундах
 client_timeout = 300 # таймаут поддержания соединения, между запросами в секундах
 pid_file = /path/manticore/pid_dir/searchd.pid # PID(ProcessID) файл родительского процесса
 seamless_rotate = 1 # предотвращает паралич search при работе с большим количеством кешируемых данных
 preopen_indexes = 0 # Откривать все индексы при запуске, 0 - нет
 unlink_old = 1 # чистка старых индексов, 1 - да
 max_packet_size = 8M # Максимальный размер сетевого пакета для обмена данными
 max_filters = 256 # Максимальное количество фильтров что можно использовать на один запрос
 max_filter_values = 4096 # Макс. количество значений для одного фильтра
 binlog_path = /path/manticore/logs
}

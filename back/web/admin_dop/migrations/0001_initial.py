# Generated by Django 3.1.7 on 2021-03-18 12:16

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ModelAlerts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='Содержание')),
                ('type', models.CharField(choices=[('info', 'информация'), ('warn', 'предупреждение'), ('error', 'ошибка')], default='error', max_length=8, verbose_name='Тип')),
                ('wait', models.PositiveSmallIntegerField(default=0, help_text='0 - не ограничено', verbose_name='Время показа, сек.')),
                ('owner', models.CharField(blank=True, default='', max_length=5, verbose_name='Владелец')),
                ('users', models.CharField(blank=True, default='', max_length=255, verbose_name='Пользователи')),
                ('groups', models.CharField(blank=True, default='', max_length=255, verbose_name='Группы')),
                ('descript', models.CharField(blank=True, default='', max_length=255, verbose_name='Примечание')),
                ('enabled', models.BooleanField(default=True, verbose_name='Доступно')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'db_table': 'sys_alert',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModelOwnerLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'owner_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModelScript',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Данное название будет отображаться в меню выбора анализа', max_length=50, unique=True, verbose_name='Название Скрипта')),
                ('icon', models.CharField(blank=True, choices=[('HOME', 'home_icon'), ('APPLE', 'apple_icon'), ('CELERY', 'celery_icon'), ('CAR', 'car_icon'), ('CAT', 'cat_icon')], default='', help_text='Данная иконка будет отображаться в меню выбора анализа', max_length=25, verbose_name='Иконка')),
                ('hint', models.CharField(blank=True, default='', help_text='Ввод тектса подсказки, которая будет отображаться в меню выбора анализа', max_length=255, verbose_name='Всплывающая подсказка')),
                ('content', models.TextField(blank=True, default='', help_text='Поле ввода скрипта', verbose_name='Текст скрипта')),
                ('descript', models.TextField(help_text='Введите описание данного объекта', verbose_name='Описание объекта')),
                ('variables', models.CharField(blank=True, default='', help_text='Введите переменные формата (name variables):(type variables)', max_length=255, verbose_name='Переменные')),
                ('enabled', models.BooleanField(default=True, help_text='Включение/отключение скрипта', verbose_name='Состояние')),
            ],
            options={
                'verbose_name': 'Скрипт',
                'verbose_name_plural': 'Скрипты',
                'db_table': 'sys_script',
                'managed': False,
            },
        ),
    ]
